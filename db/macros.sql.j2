
{% macro create_dictionary(name) %}
create table if not exists {{ name }}(
  id serial primary key,
  value text unique not null
);
{% endmacro %}


{% macro create_array(name) %}
create table if not exists {{ name }}(
  doc_id bytea not null references document_props(id),
  value text not null
);
{% endmacro %}


{% macro fill_array(name, raw_table, field) %}
with
  array_values(id, val) as (
    select
      decode(id, 'hex'),
      json_array_elements_text(raw.data->'{{ field }}')
    from {{ raw_table }} raw
  ),
  array_inserted as (
    insert into {{ name }}
      select *
        from array_values
        where coalesce(val, '') != ''
    returning 1
  )
  select '{{ name }}' as array, count(*) as inserted
    from array_inserted;

create index if not exists {{ name }}_doc_id_idx
  on {{ name }}(doc_id);
{% endmacro %}
