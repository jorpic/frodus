

-- TODO: case_document_result_date



create table case_text_length(doc_id bytea primary key, len int4 not null);
insert into case_text_length select doc_id, length(value) from case_text;


with
  stat as (
    select
      log(2, min(len)) as min,
      log(2, max(len)) as max,
      max(len) as xmax
    from case_text_length
  ),
  hg as (
    select
      width_bucket(log(2, tx.len), stat.min, stat.max, 30),
      int4range(
        min(tx.len),
        max(tx.len), '[]') as range,
      count(*)
    from stat, case_text_length tx
    group by 1
    order by 1
  )
  select
    hg.range,
    hg.count,
    repeat(
      '■',
      (hg.count::float / max(hg.count) over () * 30)::int
    )
  from hg, stat;




{% for d in dictionaries %}
with
  total(count) as (
    select count(*) from {{ d.name }}
  ),
  hg(id, count) as (
    select {{ d.field }}, count(*) from case_props group by 1
  ),
  hg_params as (
    select min(count), max(count), sum(count) from hg
  ),
  hg_nice as (
    select
      left(d.value, 35) || case when length(d.value) > 35 then '…' else '' end,
      hg.count,
      round(hg.count / hg_params.sum * 100, 2) || '%',
      repeat('■', (hg.count::float / hg_params.max * 30)::int)
    from hg, hg_params, {{ d.name }} d
    where hg.id = d.id
  )
  select 'Название словаря: {{ d.name }}', null::bigint, null, null
  union all
  select 'Количество значений: ' || total.count, null, null, null from total
  union all
  select null, null, null, null
  union all
  (select * from hg_nice order by count desc limit 12)
  union all
  select '...', null, null, null from total where count > 12
  union all
  (select * from
    (select hg_nice.*
      from hg_nice, total
      where total.count > 12
      order by hg_nice.count asc limit 4) x
    order by count desc);
{% endfor %}
